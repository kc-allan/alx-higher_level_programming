>>> matrix_divided = __import__('2-matrix_divided').matrix_divided
>>> m = [[1, 2.0, 3], [4, 5, 6.5]]
>>> m1 = [1, 2, 3]
>>> m2 = [["string", 4], [5, 6]]
>>> m3 = "hello"
>>> m4 = [[1, 2, 3], [1, 2]]

>>> matrix_divided(m1, 2)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided(m, 2)
[[0.5, 1.0, 1.5], [2.0, 2.5, 3.25]]

>>> matrix_divided(m, 2.0)
[[0.5, 1.0, 1.5], [2.0, 2.5, 3.25]]

>>> matrix_divided(m2, 2)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided(m4, 2)
Traceback (most recent call last):
TypeError: Each row of the matrix must have the same size

>>> matrix_divided(m3, 2)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided(m, "str")
Traceback (most recent call last):
TypeError: div must be a number

>>> matrix_divided(m, 0)
Traceback (most recent call last):
ZeroDivisionError: division by zero

>>> matrix_divided()
Traceback (most recent call last):
TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'

>>> matrix_divided(2)
Traceback (most recent call last):
TypeError: matrix_divided() missing 1 required positional argument: 'div'

>>> div = float('inf')
>>> matrix_divided(m, div)
[[0.0, 0.0, 0.0], [0.0, 0.0, 0.0]]
